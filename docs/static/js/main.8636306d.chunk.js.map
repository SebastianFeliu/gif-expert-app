{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","onChange","target","value","type","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,SAKvC,2BACIC,SAjBc,SAAEL,GAIxBF,EAAcE,EAAEM,OAAOC,QAcfC,KAAK,OACLD,MAAUV,IAEd,+B,uBC3BCY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,kDACqCC,UAAUH,GAD/C,+DAGDI,MAAOF,GAHN,cAGbG,EAHa,gBAKIA,EAAIC,OALR,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,sDCGPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,yBAAKc,UAAY,4DACjB,yBACIC,IAAKf,EACLgB,IAAKN,IAEL,2BAAIA,KCNHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAgBtC,OARDC,qBAAW,WACVxB,EAASC,GACJwB,MAAK,SAAAd,GAAG,OAAIY,EAAS,CAClBf,KAAMG,EACNU,SAAS,SAEf,CAAEpB,IAEGqB,EDbyBI,CAAazB,GAAhCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,oCACI,wBAAIJ,UAAU,qCAAsChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,eACZ,yBAAKA,UAAU,aAEZH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAgB,IAAOhB,EAAIC,IACND,UEiBViB,EA9BM,WAAM,MAGazC,mBAAS,CAAC,SAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAMvB,OACI,oCACI,8CACA,kBAAC,EAAD,CACIA,cAAgBA,IAEpB,6BAGA,4BAEI2C,EAAWnB,KAAK,SAACT,EAAU6B,GAAX,OACZ,kBAAC,EAAD,CACAH,IAAO1B,EACPA,SAAYA,U,MCnBhC8B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.8636306d.chunk.js","sourcesContent":["import React, { useState }  from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = ( e ) => {\n\n        //setCategories(categories.concat(categoryName));\n\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 1 ) {\n            setCategories( cats => [inputValue, ...cats] );\n        }\n    }\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                onChange={ handleInputChange }\n                type=\"text\" \n                value = { inputValue }>\n            </input> \n            <br/>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n\nexport default AddCategory;","export const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?&q=${ encodeURI(category) }&limit=10&api_key=dhRC9i6UrDp4cLWuD5TEplBgn0Te7g3C`;\n    \n    const res = await fetch( url );\n\n    const { data } = await res.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n    return (\n        <div className = \"card animate__animated animate__bounce animate__delay-2s\">\n        <img \n            src={url}\n            alt={title}\n        />\n            <p>{title}</p>\n        </div>\n\n    )\n}\n\nGifGridItem.propTypes = {\n    image: PropTypes.object,\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from \"./GifGridItem\";\n\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce\">{ category }</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\n             <div className=\"card-grid\">\n            {\n                images.map( img => (\n                    <GifGridItem \n                    key = {img.id}\n                    { ...img } /> )\n                )\n            }     \n            </div> \n            \n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n\n   useEffect( () => {\n    getGifs( category ) \n        .then(img => setState({\n            data: img,\n            loading: false\n        }))\n   }, [ category ])\n\n    return state;\n\n}","import React, { useState } from 'react';\n//import PropTypes from 'prop-types';\nimport AddCategory from \"./components/AddCategory\";\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    //const categories = ['Mr Robot', 'Skate','Vinyl'];\n    const [categories, setCategories] = useState(['2020']);\n\n\n    return(\n        <>\n            <h2>Gif Expert App</h2>\n            <AddCategory \n                setCategories={ setCategories }\n            />\n            <hr/>\n\n\n            <ol>\n                {\n                categories.map( (category, i) => (\n                    <GifGrid \n                    key = {category}\n                    category = {category}/>\n                )\n            )\n                }                \n            </ol>\n        </>\n    )\n\n}\n\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n    \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}